#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://43.203.105.160:3306/jungle_web
#spring.datasource.username=root
#spring.datasource.password=1q2w3e4r
#
##update the schema with the given values.
#spring.jpa.hibernate.ddl-auto=update
##To beautify or pretty print the SQL
#spring.jpa.properties.hibernate.format_sql=true
##show sql
#spring.jpa.properties.hibernate.show-sql=true
##show parameter binding
#logging.level.org.hibernate.type.descriptor.sql=DEBUG
#
#logging.level.org.hibernate.SQL=DEBUG
#
#spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    username: root
    url: jdbc:mariadb://43.203.105.160:3306/jungle_web
    password: 1q2w3e4r
  jpa:
    properties:
      hibernate:
        show-sql: 'true'
        format_sql: 'true'
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql: DEBUG
---
spring:
  config:
    activate:
      on-profile: "local"
  cors:
    allowed-origin: "http://localhost:3000"

server:
  port: 443
  ssl:
    enabled: true
    key-store: src/main/resources/cert_and_key.p12
    key-store-password: 1q2w3e4r
    key-store-type: PKCS12
---
spring:
  config:
    activate:
      on-profile: "prod"
  cors:
    allowed-origin: "https://www.jungleweb.monster"

server:
  port: 8443
  ssl:
    enabled: true
    key-store: cert_and_key.p12
    key-store-password: 1q2w3e4r
    key-store-type: PKCS12
